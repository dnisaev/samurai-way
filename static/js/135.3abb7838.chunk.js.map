{"version":3,"file":"static/js/135.3abb7838.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","hoc/withAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__YQNKw\",\"dialogsItems\":\"Dialogs_dialogsItems__nEfks\",\"active\":\"Dialogs_active__4qBBt\",\"dialog\":\"Dialogs_dialog__hXcYp\",\"messagesItems\":\"Dialogs_messagesItems__mNzoH\",\"message\":\"Dialogs_message__J9hdM\"};","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { DialogType } from \"../../../redux/dialogs-reducer\";\r\n\r\nconst Dialog = ({ name, id }: DialogType) => {\r\n  return (\r\n    <div className={styles.dialog}>\r\n      <NavLink to={`/dialogs/${id}`} activeClassName={styles.active}>\r\n        {name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\nexport default Dialog;\r\n","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\nimport { MessageType } from \"../../../redux/dialogs-reducer\";\r\n\r\nconst Message = ({ id, message }: MessageType) => {\r\n  return (\r\n    <div id={id} className={styles.message}>\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\nexport default Message;\r\n","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport { DialogsStateType } from \"../../redux/dialogs-reducer\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\n// import {Redirect} from \"react-router-dom\";\r\n\r\nexport const Dialogs = ({ state, addMessage }: DialogsPropsType) => {\r\n  let dialogsElements = state.dialogs.map((d) => {\r\n    return <Dialog key={d.id} name={d.name} id={d.id} />;\r\n  });\r\n  let messagesElements = state.messages.map((m) => {\r\n    return <Message key={m.id} message={m.message} id={m.id} />;\r\n  });\r\n\r\n  const addNewMessage = (values: AddMessageFormType) => {\r\n    addMessage(values.newMessageBody);\r\n  };\r\n\r\n  //if (!isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n  return (\r\n    <div className={styles.dialogsWrapper}>\r\n      <div className={styles.dialogsItems}>{dialogsElements}</div>\r\n      <div className={styles.messagesItems}>\r\n        <div>{messagesElements}</div>\r\n        <div>\r\n          <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormType>> = (props) => {\r\n  const maxLength = maxLengthCreator(10);\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name={\"newMessageBody\"}\r\n          placeholder={\"Введите сообщение\"}\r\n          validate={[required, maxLength]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Отправить</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm<AddMessageFormType>({ form: \"dialogAddMessageForm\" })(AddMessageForm);\r\n\r\ntype AddMessageFormType = {\r\n  newMessageBody: string;\r\n};\r\ntype DialogsPropsType = {\r\n  state: DialogsStateType;\r\n  isAuth: boolean;\r\n  addMessage: (newMessageBody: string) => void;\r\n};\r\n","import { addMessage } from \"../../redux/dialogs-reducer\";\r\nimport { AppRootStateType } from \"../../redux/redux-store\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dialogs } from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport React from \"react\";\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => {\r\n  return {\r\n    state: state.dialogsPage,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport default compose<React.ComponentType>(withAuthRedirect, connect(mapStateToProps, { addMessage }))(Dialogs);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AppRootStateType } from \"../redux/redux-store\";\r\nimport { connect } from \"react-redux\";\r\n\r\ntype MapStatePropsType = {\r\n  isAuth: boolean;\r\n};\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => ({ isAuth: state.auth.isAuth });\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n  class RedirectComponent extends React.Component<MapStatePropsType> {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToProps)(RedirectComponent);\r\n};\r\n"],"names":["_ref","name","id","_jsx","className","styles","children","NavLink","to","concat","activeClassName","message","AddMessageFormRedux","reduxForm","form","props","maxLength","maxLengthCreator","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","compose","withAuthRedirect","connect","state","dialogsPage","isAuth","auth","addMessage","dialogsElements","dialogs","map","d","Dialog","messagesElements","messages","m","Message","values","newMessageBody","mapStateToProps","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","Redirect","React"],"sourceRoot":""}